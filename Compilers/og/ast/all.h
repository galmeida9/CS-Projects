//
// **** AUTOMATICALLY GENERATED BY mk-node-decls.pl -- DO NOT EDIT ****
//
#include <cdk/ast/all.h>

#ifdef __NODE_DECLARATIONS_ONLY__

namespace og {
class address_of_node; 
class block_node; 
class break_node; 
class continue_node; 
class evaluation_node; 
class for_node; 
class function_call_node; 
class function_declaration_node; 
class function_definition_node; 
class identity_node; 
class if_else_node; 
class if_node; 
class index_node; 
class nullptr_node; 
class print_node; 
class read_node; 
class return_node; 
class sizeof_node; 
class stack_alloc_node; 
class tuple_index_node; 
class tuple_node; 
class variable_declaration_node; 

} // namespace og

#else /* !defined(__NODE_DECLARATIONS_ONLY__) */

#ifndef __AUTOMATIC_og_NODE_ALLNODES_H__
#define __AUTOMATIC_og_NODE_ALLNODES_H__

#include "ast/address_of_node.h"
#include "ast/block_node.h"
#include "ast/break_node.h"
#include "ast/continue_node.h"
#include "ast/evaluation_node.h"
#include "ast/for_node.h"
#include "ast/function_call_node.h"
#include "ast/function_declaration_node.h"
#include "ast/function_definition_node.h"
#include "ast/identity_node.h"
#include "ast/if_else_node.h"
#include "ast/if_node.h"
#include "ast/index_node.h"
#include "ast/nullptr_node.h"
#include "ast/print_node.h"
#include "ast/read_node.h"
#include "ast/return_node.h"
#include "ast/sizeof_node.h"
#include "ast/stack_alloc_node.h"
#include "ast/tuple_index_node.h"
#include "ast/tuple_node.h"
#include "ast/variable_declaration_node.h"


#endif /* !defined(__AUTOMATIC_og_NODE_ALLNODES_H__) */

#endif /* !defined(__NODE_DECLARATIONS_ONLY__) */
